//! This module provides a function for classifying the material of an object in an image using TensorFlow and PyTorch.
//!
//! # Example
//!
//! ```
//! use tensorflow::{Tensor, Graph, Session};
//! use torch::{Tensor, nn};
//!
//! // Load the user-generated image into a variable:
//! let image = load_image_from_cleanapp();
//!
//! // Use TensorFlow to classify the material of the object in the image:
//! let mut tf_session = Session::new(&Graph::new())?;
//! let tf_model = TensorFlowModel::from_saved_model("material_classification_model.pb")?;
//! let tf_material_classification = tf_model.predict(&mut tf_session, image)?;
//!
//! // Use PyTorch to classify the material of the object in the image:
//! let mut pt_model = torch::load("material_classification_model.pt")?;
//! pt_model.eval();
//! let pt_material_classification = pt_model(image)?;
//!
//! // Return the material classification to CleanApp:
//! Ok(MaterialClassification {
//!     tf_classification: tf_material_classification,
//!     pt_classification: pt_material_classification,
//! })
//! ```

# Import the necessary libraries:
import tensorflow as tf
import torch

# Load the user-generated image into a variable:
image = load_image_from_cleanapp()

# Use TensorFlow to classify the material of the object in the image:
with tf.Session() as sess:
  # Load the pre-trained TensorFlow model:
  model = tf.saved_model.load("material_classification_model.pb")

  # Run the model on the image to get the material classification:
  material_classification = model.predict(image)

# Use PyTorch to classify the material of the object in the image:
with torch.no_grad():
  # Load the pre-trained PyTorch model:
  model = torch.load("material_classification_model.pt")

  # Run the model on the image to get the material classification:
  material_classification = model(image)

# Return the material classification to CleanApp:
return material_classification
